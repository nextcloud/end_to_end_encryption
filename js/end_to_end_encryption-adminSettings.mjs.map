{"version":3,"file":"end_to_end_encryption-adminSettings.mjs","sources":["../src/components/AdminSection.vue","../src/settings-admin.ts"],"sourcesContent":["<!--\n  - SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n  -->\n\n<script setup lang=\"ts\">\nimport type { OCSResponse } from '@nextcloud/typings/ocs'\n\nimport axios from '@nextcloud/axios'\nimport { showSuccess } from '@nextcloud/dialogs'\nimport { loadState } from '@nextcloud/initial-state'\nimport { t } from '@nextcloud/l10n'\nimport { generateOcsUrl } from '@nextcloud/router'\nimport debounce from 'debounce'\nimport { onMounted, ref } from 'vue'\nimport NcButton from '@nextcloud/vue/components/NcButton'\nimport NcSelect from '@nextcloud/vue/components/NcSelect'\nimport NcSettingsSection from '@nextcloud/vue/components/NcSettingsSection'\nimport logger from '../services/logger.ts'\n\ninterface IGroup {\n\tid: string\n\tdisplayname: string\n}\n\nconst loading = ref(false)\nconst loadingGroups = ref(true)\nconst allowedGroups = ref(loadState<string[]>('end_to_end_encryption', 'allowed_groups').map((group) => {\n\treturn {\n\t\tid: group,\n\t\tdisplayname: group,\n\t}\n}).sort(function(a, b) {\n\treturn a.displayname.localeCompare(b.displayname)\n}))\nconst groups = ref([...allowedGroups.value])\n\n/**\n * Searches for groups matching the query\n */\nconst searchGroup = debounce(async function(query?: string) {\n\tloadingGroups.value = true\n\ttry {\n\t\tconst { data } = await axios.get<OCSResponse<{ groups: IGroup[] }>>(generateOcsUrl('cloud/groups/details'), {\n\t\t\tparams: {\n\t\t\t\tsearch: query,\n\t\t\t\tlimit: 20,\n\t\t\t\toffset: 0,\n\t\t\t},\n\t\t})\n\t\tgroups.value = data.ocs.data.groups.sort(function(a, b) {\n\t\t\treturn a.displayname.localeCompare(b.displayname)\n\t\t})\n\t} catch (error) {\n\t\tlogger.error('Could not fetch groups', { error })\n\t} finally {\n\t\tloadingGroups.value = false\n\t}\n}, 500)\n\nonMounted(() => searchGroup())\n\n/**\n * Saves the allowed groups to the config on the server\n */\nfunction saveChanges() {\n\tloading.value = true\n\tloadingGroups.value = true\n\tconst groups = allowedGroups.value.map((group) => {\n\t\treturn group.id\n\t})\n\tglobalThis.OCP.AppConfig.setValue('end_to_end_encryption', 'allowed_groups', JSON.stringify(groups), {\n\t\tsuccess() {\n\t\t\tloading.value = false\n\t\t\tloadingGroups.value = false\n\t\t\tshowSuccess(t('end_to_end_encryption', 'Saved groups'))\n\t\t},\n\t})\n}\n</script>\n\n<template>\n\t<NcSettingsSection :name=\"t('end_to_end_encryption', 'End-to-End Encryption')\" class=\"admin-e2ee\">\n\t\t<h3>{{ t('end_to_end_encryption', 'Limit to groups') }}</h3>\n\t\t<p class=\"settings-hint\">\n\t\t\t{{ t('end_to_end_encryption', 'When at least one group is selected, only people of the listed groups can use the End-to-End encryption app.') }}\n\t\t</p>\n\t\t<NcSelect\n\t\t\tv-model=\"allowedGroups\"\n\t\t\tclass=\"admin-e2ee__group-select\"\n\t\t\t:disabled=\"loading\"\n\t\t\t:input-label=\"t('end_to_end_encryption', 'Limit app usage to groups')\"\n\t\t\tlabel=\"displayname\"\n\t\t\t:loading=\"loadingGroups\"\n\t\t\t:options=\"groups\"\n\t\t\tmultiple\n\t\t\tsearchable\n\t\t\t@search-change=\"searchGroup\" />\n\n\t\t<NcButton\n\t\t\tclass=\"admin-e2ee__save-button\"\n\t\t\t:loading=\"loading\"\n\t\t\tvariant=\"primary\"\n\t\t\t@click=\"saveChanges\">\n\t\t\t{{ t('end_to_end_encryption', 'Save') }}\n\t\t</NcButton>\n\t</NcSettingsSection>\n</template>\n\n<style scoped lang=\"scss\">\n.admin-e2ee {\n\t&__headline {\n\t\tmargin-block: 0.5em 1em;\n\t}\n\n\t&__group-select {\n\t\tmax-width: 300px;\n\t}\n\n\t&__save-button {\n\t\tmargin-block-start: 1em;\n\t}\n}\n</style>\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { createApp } from 'vue'\nimport AdminSection from './components/AdminSection.vue'\n\nconst app = createApp(AdminSection)\napp.mount('#security-admin-end-to-end')\n"],"names":["loading","ref","loadingGroups","allowedGroups","loadState","group","b","groups","searchGroup","debounce","query","data","axios","generateOcsUrl","a","error","logger","onMounted","saveChanges","showSuccess","t","_createBlock","_unref","NcSettingsSection","_createElementVNode","_hoisted_1","_toDisplayString","_createVNode","NcSelect","$event","NcButton","app","createApp","AdminSection"],"mappings":"4WAyBA,MAAMA,EAAUC,EAAI,EAAK,EACnBC,EAAgBD,EAAI,EAAI,EACxBE,EAAgBF,EAAIG,EAAoB,wBAAyB,gBAAgB,EAAE,IAAKC,IACtF,CACN,GAAIA,EACJ,YAAaA,CAAA,EAEd,EAAE,KAAK,SAAS,EAAGC,EAAG,CACtB,OAAO,EAAE,YAAY,cAAcA,EAAE,WAAW,CACjD,CAAC,CAAC,EACIC,EAASN,EAAI,CAAC,GAAGE,EAAc,KAAK,CAAC,EAKrCK,EAAcC,EAAS,eAAeC,EAAgB,CAC3DR,EAAc,MAAQ,GACtB,GAAI,CACH,KAAM,CAAE,KAAAS,GAAS,MAAMC,EAAM,IAAuCC,EAAe,sBAAsB,EAAG,CAC3G,OAAQ,CACP,OAAQH,EACR,MAAO,GACP,OAAQ,CAAA,CACT,CACA,EACDH,EAAO,MAAQI,EAAK,IAAI,KAAK,OAAO,KAAK,SAASG,EAAGR,EAAG,CACvD,OAAOQ,EAAE,YAAY,cAAcR,EAAE,WAAW,CACjD,CAAC,CACF,OAASS,EAAO,CACfC,EAAO,MAAM,yBAA0B,CAAE,MAAAD,CAAA,CAAO,CACjD,QAAA,CACCb,EAAc,MAAQ,EACvB,CACD,EAAG,GAAG,EAENe,EAAU,IAAMT,GAAa,EAK7B,SAASU,GAAc,CACtBlB,EAAQ,MAAQ,GAChBE,EAAc,MAAQ,GACtB,MAAMK,EAASJ,EAAc,MAAM,IAAKE,GAChCA,EAAM,EACb,EACD,WAAW,IAAI,UAAU,SAAS,wBAAyB,iBAAkB,KAAK,UAAUE,CAAM,EAAG,CACpG,SAAU,CACTP,EAAQ,MAAQ,GAChBE,EAAc,MAAQ,GACtBiB,EAAYC,EAAE,wBAAyB,cAAc,CAAC,CACvD,CAAA,CACA,CACF,mBAICC,EAwBoBC,EAAAC,CAAA,EAAA,CAxBA,KAAMD,EAAAF,CAAA,EAAC,wBAAA,uBAAA,EAAoD,MAAM,YAAA,aACpF,IAA4D,CAA5DI,EAA4D,YAArDF,EAAAF,CAAA,EAAC,wBAAA,iBAAA,CAAA,EAAA,CAAA,EACRI,EAEI,IAFJC,EAEIC,EADAJ,EAAAF,CAAA,EAAC,wBAAA,8GAAA,CAAA,EAAA,CAAA,EAELO,EAUgCL,EAAAM,CAAA,EAAA,YATtBzB,EAAA,2CAAAA,EAAa,MAAA0B,GACtB,MAAM,2BACL,SAAU7B,EAAA,MACV,cAAasB,EAAAF,CAAA,EAAC,wBAAA,2BAAA,EACf,MAAM,cACL,QAASlB,EAAA,MACT,QAASK,EAAA,MACV,SAAA,GACA,WAAA,GACC,eAAee,EAAAd,CAAA,CAAA,uFAEjBmB,EAMWL,EAAAQ,CAAA,EAAA,CALV,MAAM,0BACL,QAAS9B,EAAA,MACV,QAAQ,UACP,QAAOkB,CAAA,aACR,IAAwC,KAArCI,EAAAF,CAAA,EAAC,wBAAA,MAAA,CAAA,EAAA,CAAA,CAAA,uFChGDW,EAAMC,EAAUC,CAAY,EAClCF,EAAI,MAAM,4BAA4B"}